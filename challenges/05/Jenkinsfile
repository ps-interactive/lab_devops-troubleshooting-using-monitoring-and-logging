pipeline {
    agent any
    environment {
        GO_APP_NAME = 'my-metrics-app'
        GOMODCACHE = '/home/jenkins/go-cache'
        APP_DIRECTORY = '/home/jenkins/my-metrics-app'
    }
    stages {
        stage('Build') {
            steps {
				echo 'Building the Go application...'
				dir (env.APP_DIRECTORY) {
					// Build the Go application
					sh 'sudo go build -mod=readonly -o $GO_APP_NAME main.go'
					sh 'sudo chmod 777 $GO_APP_NAME'
                }
            }
        }
        stage('Deploy') {
            steps {
				echo 'Creating service file...'
				dir (env.APP_DIRECTORY) {
					sh 'sudo cp my-metrics-app.service /etc/systemd/system/.'
				}
				
				echo 'Starting app...'
				sh 'sudo systemctl daemon-reload'
				sh 'sudo systemctl start my-metrics-app'
				sh 'sudo systemctl enable my-metrics-app'
            }
        }
        stage('Setup Monitoring & Logging') {
            parallel {
				stage('Setup Prometheus scraping') {
					steps {
						echo 'Creating new Prometheus job details...'
						sh '''
						config_file="/etc/prometheus/prometheus.yml"
						new_job_name="my-metrics-app"
						if grep -q "job_name: $new_job_name" "$config_file"; then
							echo "Scrape configuration for job '$new_job_name' already exists."
						else
							echo "  - job_name: 'my-metrics-app'" >> $config_file
							echo "    scrape_interval: 5s" >> $config_file
							echo "    static_configs:" >> $config_file
							echo "    - targets: ['localhost:2112']" >> $config_file
							echo "Reloading Prometheus..."
							curl -X POST http://localhost:9090/-/reload
							echo "Configuration reloaded. New scrape config added successfully."
						fi
						'''
					}
				}
				stage('Ingest logs to ElasticSearch') {
					steps {
						echo 'Updating logstash config...'
						dir (env.APP_DIRECTORY) {
							sh 'sudo cp my-metrics-app.conf /etc/logstash/conf.d/.'
						}
						
						echo 'Restarting logstash service...'
						sh 'sudo systemctl restart logstash --no-pager -n 5'
						echo 'Creating kibana index pattern...'
						sh '''
						curl -X POST http://localhost:5601/api/index_patterns/index_pattern -H "Content-Type: application/json" -H "kbn-xsrf: true" -d '{"index_pattern": {"title": "my-metrics-app*", "timeFieldName": "@timestamp"}}'
						'''
					}
				}
            }
        }
    }
}

